@using StorageManagementApp.Contracts.DTOs.Product;
@using StorageManagementApp.Contracts.Enums;
@model StorageManagementApp.Contracts.DTOs.Product.ProductVM
@{
    ViewData["Title"] = "Search Products";
    Layout = "~/Views/Shared/_LoggedLayout.cshtml";
}
@*<script>
    function setFilters() {

        var code = document.getElementById("codeInput").value;
        var name = document.getElementById("nameInput").value;
        var category = document.getElementById("dropdown").value;
        var data = {
            code: code,
            name: name,
            category: category
        }

        $.ajax({
            type: "POST",
            url: "/Product/Search",
            data: data,
            success: function (response) {
                console.log(response);
                $("#table tbody tr").remove();
                for (var i = 0; i < response.length; i++) {
                    var row = "<tr>";
                    row += "<td>" + response[i].description + "</td>";
                    row += "<td>" + response[i].name + "</td>";
                    row += "<td>" + response[i].purchasePrice + "</td>";
                    row += "<td>" + response[i].retailPrice + "</td>";
                    row += "<td>" + response[i].code + "</td>";
                    row += "<td>" + response[i].inStock + "</td>";
                    row += "<td>" + response[i].categoryName + "</td>";
                    row += "<td>" + response[i].imagePath + "</td>";
                    row += "<td> <a href='/Product/Edit/" + response[i].id + "'>Edit</a> |";
                    row += "<a href='/User/ShowConfirmDialog/" + response[i].id + "' data-target='#modal'>Delete</a> </td>";
                    row += "</tr>";
                    $("#table tbody").append(row);
                }
            }
        })
    }

    function deleteProduct(id){
        
    }
</script>*@
@Html.ActionLink("Add product", "Create", "Product")
    

<form class="d-inline" asp-action="Search" asp-controller="Product" method="get">


    <div class="form-group w-25">
        <label>Select category</label>
        <select id="dropdown" asp-for="@Model.Query.CategoryId" asp-items="Html.GetEnumSelectList<CategoryEnum>()"></select>
    </div>

    @Html.TextBoxFor(item => @Model.Query.Name, new { @class = "form-control w-25"})
    @Html.TextBoxFor(item => @Model.Query.Code, new { @class = "form-control w-25"})

    <button type="submit">Search</button>

@*@Html.ActionLink("Search", "Search", "Product", Model.Query)*@

</form>
<button>Clear filter</button>
@*<input type="text" id="nameInput" placeholder="Name" />*@
@*<input type="text" id="codeInput" placeholder="Code" />*@
@*<a asp-action="Search" asp-controller="Product" asp> Search</a>*@
<table id="table" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Description")
            </th>
            <th>
                @Html.DisplayName("Name")
            </th>
            <th>
                @Html.DisplayName("Purchase price")
            </th>
            <th>
                @Html.DisplayName("Retail price")
            </th>
            <th>
                @Html.DisplayName("Code")
            </th>
            <th>
                @Html.DisplayName("In stock")
            </th>
            <th>
                @Html.DisplayName("Category")
            </th>
            <th>
                @Html.DisplayName("Image")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (@Model.Products?.Count > 0)
        {
            @foreach (var item in Model.Products)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PurchasePrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RetailPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InStock)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CategoryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ImagePath)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-controller="Product" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="ShowConfirmDialog" data-target="#modal" asp-controller="Product"  asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td>
                    @Html.Label("No data!")
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
Page @(Model.Query.PageCount < Model.Query.PageNumber ? 0 : Model.Query.PageNumber) of @Model.Query.PageCount
@*@Html.PagedListPager(Model, page => Url.Action("Index"))*@


