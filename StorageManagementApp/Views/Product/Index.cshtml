@using StorageManagementApp.Contracts.DTOs.Product;
@using StorageManagementApp.Contracts.Enums;
@model StorageManagementApp.Contracts.DTOs.Product.ProductVM
@{
    ViewData["Title"] = "Search Products";
    Layout = "~/Views/Shared/_LoggedLayout.cshtml";
}
@Html.ActionLink("Add product", "Create", "Product")


<form class="d-inline" asp-action="Search" asp-controller="Product" method="get">


    <div class="form-group w-25">
        <label>Select category</label>
        <select id="dropdown" asp-for="@Model.Query.CategoryId" asp-items="Html.GetEnumSelectList<CategoryEnum>()"></select>
    </div>

    @Html.TextBoxFor(item => @Model.Query.Name, new { @class = "form-control w-25", @placeholder = "Name..."})
    @Html.TextBoxFor(item => @Model.Query.Code, new { @class = "form-control w-25", @placeholder = "Code..."})

    <button type="submit">Search</button>


</form>

<button>Clear filter</button>

<table id="table" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Description")
            </th>
            <th>
                @Html.DisplayName("Name")
            </th>
            <th>
                @Html.DisplayName("Purchase price")
            </th>
            <th>
                @Html.DisplayName("Retail price")
            </th>
            <th>
                @Html.DisplayName("Code")
            </th>
            <th>
                @Html.DisplayName("In stock")
            </th>
            <th>
                @Html.DisplayName("Category")
            </th>
            <th>
                @Html.DisplayName("Image")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (@Model.Products?.Count > 0)
        {
            @foreach (var item in Model.Products)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PurchasePrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RetailPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InStock)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CategoryName)
                    </td>
                    <td>
                        <img width="50" height="50" src="@item.ImagePath">
                    </td>
                    <td>
                        <a asp-action="Edit" asp-controller="Product" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="ShowConfirmDialog" data-target="#modal" asp-controller="Product" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td>
                    @Html.Label("No data!")
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
Page @(Model.Query.PageCount < Model.Query.PageNumber ? 0 : Model.Query.PageNumber) of @Model.Query.PageCount
@*@Html.PagedListPager(Model, page => Url.Action("Index"))*@


